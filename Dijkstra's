#include<stdio.h>

int dij (int n,int v, int cost[10][10], int 

dist[]);

int main()

{

int n,i,j,cost[10][10],dist[10],v;

printf("Enter the No of nodes of graph\n");

scanf("%d",&n);

printf("Enter the elements of the matrix\n");

for(i=1;i<=n;i++)

for (j=1;j<=n;j++)

{

scanf("%d",&cost[i][j]);

if(cost[i][j] == 0)

cost[i][j] = 999;

}

printf("Enter the source vertex\n");

scanf("%d",&v);

dij(n,v,cost,dist);

printf("Shortes path from \n");

for(j=1;j<=n;j++)

if(j != v)

printf("%d --> %d........%d\

n",v,j,dist[j]);

}

int dij (int n,int v, int cost[10][10], int 

dist[])

{

int i,u,count,w,min,flag[10];

for (i=1;i<=n;i++)flag[i]=0,dist[i] = cost[v][i];

flag[v] = 1, dist[v] = 1;

count = 2;

while (count <= n)

{

min = 999;

for (w=1;w<=n;w++)

if (dist[w]<min && !flag[w])

min = dist[w],u=w;

flag[u]=1;

count++;

for (w=1;w<=n;w++)

if ((dist[u] + cost[u][w] 

<dist[w]) && !flag[w])

dist[w] = dist[u] + cost[u]

[w];

}

}
